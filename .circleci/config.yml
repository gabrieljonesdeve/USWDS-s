version: 2.1

orbs:
  snyk: snyk/snyk@1.1.2

executors:
  my-executor:
    docker:
      - image: cimg/ruby:3.0.4-browsers

jobs:
  install_ruby_deps:
    executor: my-executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - gem-cache-{{ checksum "Gemfile.lock" }}
            - gem-cache
      - run:
          name: Install ruby dependencies
          command: |
            gem update --system
            gem install bundler
            bundle config set --local path 'vendor/bundle'
            bundle install --jobs=4 --retry=3
      - run:
          name: Install scss_lint
          command: gem install scss_lint
      - save_cache:
          key: gem-cache-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - persist_to_workspace:
          root: ~/project
          paths:
            - "vendor/bundle"
  install_node_deps:
    executor: my-executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - npm-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Install node dependencies
          command: npm install
      - save_cache:
          key: npm-cache-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
  build:
    executor: my-executor
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - restore_cache:
          keys:
            - npm-cache-{{ checksum "package-lock.json" }}
      - restore_cache:
          keys:
            - gem-cache-{{ checksum "Gemfile.lock" }}
            - gem-cache
      - run:
          name: Build USWDS if needed
          command: npm run build:uswds
      - run:
          name: Build site assets
          command: npm run build:all-assets
      - persist_to_workspace:
          root: ~/project
          paths:
            - "_site"
            - "assets"
            - "node_modules"
  test_build:
    executor: my-executor
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - run:
          name: Run rspec
          command: |
            bundle config set --local path '~/project/vendor/bundle'
            bundle exec rspec
      - run:
          name: Run HTML proofer
          command: npm run proof
      - snyk/scan:
          organization: uswds
  test_a11y_desktop:
    executor: my-executor
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - run:
          name: Link bundler
          command: |
            bundle config set --local path '~/project/vendor/bundle'
      - run:
          name: Run pa11y-ci desktop
          command: npm run start-detached && npm run pa11y-ci:sitemap
    # The resource_class feature allows configuring CPU and RAM resources for each job. Different resource classes are available for different executors. https://circleci.com/docs/2.0/configuration-reference/#resourceclass
    resource_class: large
  test_a11y_mobile:
    executor: my-executor
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - run:
          name: Link bundler
          command: |
            bundle config set --local path '~/project/vendor/bundle'
      - run:
          name: Run pa11y-ci mobile
          command: npm run start-detached && npm run pa11y-ci:sitemap-mobile

workflows:
  circle-uswds-site:
    jobs:
      - install_ruby_deps
      - install_node_deps
      - build:
          requires:
            - install_ruby_deps
            - install_node_deps
      - test_build:
          requires:
            - build
      - test_a11y_desktop:
          requires:
            - build
      - test_a11y_mobile:
          requires:
            - build
